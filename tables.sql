CREATE TABLE PART (
P_PARTKEY INT PRIMARY KEY,
P_NAME VARCHAR(55) NOT NULL,
P_MFGR CHAR(25) NOT NULL,
P_BRAND CHAR(10) NOT NULL,
P_TYPE VARCHAR(25) NOT NULL,
P_SIZE INTEGER NOT NULL,
P_CONTAINER CHAR(10) NOT NULL,
P_RETAILPRICE DECIMAL NOT NULL,
P_COMMNET VARCHAR(23) NOT NULL,
CHECK (P_PARTKEY >= 0 AND P_SIZE >= 0 AND P_RETAILPRICE >= 0)
);

CREATE TABLE REGION (
R_REGIONKEY SMALLINT PRIMARY KEY,
R_NAME CHAR(25) NOT NULL,
R_COMMENT VARCHAR(152) NOT NULL,
CHECK (R_REGIONKEY >= 0)
);

CREATE TABLE NATION (
N_NATIONKEY SMALLINT PRIMARY KEY,
N_NAME CHAR(25) NOT NULL,
N_REGIONKEY SMALLINT,
N_COMMENT VARCHAR(152) NOT NULL,
FOREIGN KEY (N_REGIONKEY) REFERENCES REGION(R_REGIONKEY),
CHECK (N_NATIONKEY >= 0)
)
PARTITION BY HASH (N_NATIONKEY) PARTITIONS 8
STORE IN (PA1,PA2,PA3,PA4,PA5,PA6,PA7,PA8);

CREATE TABLE SUPPLIER (
S_SUPPKEY SMALLINT PRIMARY KEY,
S_NAME CHAR(25) NOT NULL,
S_ADDRESS VARCHAR(40) NOT NULL,
S_NATIONKEY SMALLINT,
S_PHONE CHAR(15) NOT NULL,
S_ACCTBAL DECIMAL NOT NULL,
S_COMMENT VARCHAR(101) NOT NULL,
FOREIGN KEY (S_NATIONKEY) REFERENCES NATION(N_NATIONKEY),
CHECK (S_SUPPKEY >= 0)
)
PARTITION BY HASH (S_SUPPKEY) PARTITIONS 8
STORE IN (PA1,PA2,PA3,PA4,PA5,PA6,PA7,PA8);

CREATE TABLE PARTSUPP (
PS_PARTKEY INT,
PS_SUPPKEY SMALLINT,
PS_AVAILQTY INTEGER NOT NULL,
PS_SUPPLYCOST DECIMAL NOT NULL,
PS_COMMENT VARCHAR(199) NOT NULL,
PRIMARY KEY (PS_PARTKEY, PS_SUPPKEY),
FOREIGN KEY (PS_PARTKEY) REFERENCES PART(P_PARTKEY),
FOREIGN KEY (PS_SUPPKEY) REFERENCES SUPPLIER(S_SUPPKEY),
CHECK (PS_PARTKEY >= 0 AND PS_AVAILQTY >= 0 AND PS_SUPPLYCOST >= 0)
);

CREATE TABLE CUSTOMER (
C_CUSTKEY INT PRIMARY KEY,
C_NAME VARCHAR(25) NOT NULL,
C_ADDRESS VARCHAR(40) NOT NULL,
C_NATIONKEY SMALLINT,
C_PHONE CHAR(15) NOT NULL,
C_ACCTBAL DECIMAL NOT NULL,
C_MKTSEGMENT CHAR(10) NOT NULL,
C_COMMENT VARCHAR(117) NOT NULL,
FOREIGN KEY (C_NATIONKEY) REFERENCES NATION(N_NATIONKEY),
CHECK (C_CUSTKEY >= 0)
);

CREATE TABLE ORDERS (
O_ORDERKEY INT PRIMARY KEY,
O_CUSTKEY INT,
O_ORDERSTATUS CHAR(1) NOT NULL,
O_TOTALPRICE DECIMAL NOT NULL,
O_ORDERDATE DATE NOT NULL,
O_ORDERPRIORITY CHAR(15) NOT NULL,
O_CLERK CHAR(15) NOT NULL,
O_SHIPPRIORITY INTEGER NOT NULL,
O_COMMENT VARCHAR(79) NOT NULL,
FOREIGN KEY (O_CUSTKEY) REFERENCES CUSTOMER(C_CUSTKEY),
CHECK (O_TOTALPRICE >= 0)
)
PARTITION BY HASH (O_ORDERKEY) PARTITIONS 8
STORE IN (PA1,PA2,PA3,PA4,PA5,PA6,PA7,PA8);

CREATE TABLE LINEITEM (
L_ORDERKEY INT,
L_PARTKEY INT,
L_SUPPKEY SMALLINT,
L_LINENUMBER INTEGER NOT NULL,
L_QUANTITY DECIMAL NOT NULL,
L_EXTENDEDPRICE DECIMAL NOT NULL,
L_DISCOUNT DECIMAL NOT NULL,
L_TAX DECIMAL NOT NULL,
L_RETURNFLAG CHAR(1) NOT NULL,
L_LINESTATUS CHAR(1) NOT NULL,
L_SHIPDATE DATE NOT NULL,
L_COMMITDATE DATE NOT NULL,
L_RECEIPTDATE DATE NOT NULL,
L_SHIPINSTRUCT CHAR(25) NOT NULL,
L_SHIPMODE CHAR(10) NOT NULL,
L_COMMENT VARCHAR(44) NOT NULL,
PRIMARY KEY (L_ORDERKEY, L_LINENUMBER),
FOREIGN KEY (L_ORDERKEY) REFERENCES ORDERS(O_ORDERKEY),
FOREIGN KEY (L_PARTKEY) REFERENCES PART(P_PARTKEY),
FOREIGN KEY (L_SUPPKEY) REFERENCES SUPPLIER(S_SUPPKEY),
FOREIGN KEY (L_PARTKEY, L_SUPPKEY) REFERENCES PARTSUPP(PS_PARTKEY, PS_SUPPKEY),
CHECK (L_QUANTITY >= 0 AND L_EXTENDEDPRICE >= 0 AND L_TAX >= 0),
CHECK (L_DISCOUNT >= 0.00 AND L_DISCOUNT <= 1.00),
CHECK (L_SHIPDATE <= L_RECEIPTDATE)
)
PARTITION BY HASH (L_ORDERKEY) PARTITIONS 8
STORE IN (PA1,PA2,PA3,PA4,PA5,PA6,PA7,PA8);
